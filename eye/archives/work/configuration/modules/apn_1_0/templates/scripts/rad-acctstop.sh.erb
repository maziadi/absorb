#!/bin/dash
#
# Called on radius ACCT STOP requests by Postgresql
# Must return ACCT validation boolean code
#
# Remark: in this context, STDOUT is evaluated as SQL commands by uphill PG function and must be routed to /dev/null
#
# Input: ref, ip, mcc, rx, tx, datets, timets, msisdn, sessiontime, timezone, visprefrt
#

if [ "$*" = "" ]; then exit 0; fi
. /opt/local/bin/lib-apn.sh

logger_tag="rad-acctstop"
logger -t ${logger_tag} "[$1] ACCT STOP $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 (forced to 0x80fd) $11"
cutoff="" # cutoff passed to pasdaran
stop=1
visp=${11}
visp=${visp#nil}

# BASIJ request
mcc=$(echo $3 | cut -c 1-3)
if [ "$mcc" != "208" ]; then
  cutoff="0"
  ret=$(echo "$2;D;;" | netcat -w 1 ${basij_server} 2>/dev/null)
  if [ ${#ret} = "0" ]; then
    ret="I'm a taliban"
  fi
  [ "$ret" != "true" ] && stop=0
  logger -t ${logger_tag} "[$1] BASIJ $2;D;; response : $ret"
fi

# PASDARAN 1 request
ret_1=$(echo "$2;D;;$cutoff;;$visp" | netcat -w 1 ${pasdaran_server_1} 2>/dev/null); x=$?
if [ ${#ret_1} = "0" ] || [ "$x" != "0" ]; then
  strret_1="I'm a taliban (netcat exit $x)"
else
  strret_1=$(pasdaran_response $ret_1)
fi
logger -t ${logger_tag} "[$1] PASDARAN-1 $2;D;;$cutoff;$visp response : $strret_1"

# PASDARAN 2 request
ret_2=$(echo "$2;D;;$cutoff;;$visp" | netcat -w 1 ${pasdaran_server_2} 2>/dev/null)
if [ ${#ret_2} = "0" ] || [ "$x" != "0" ]; then
  strret_2="I'm a taliban (netcat exit $x)"
else
  strret_2=$(pasdaran_response $ret_2)
fi
logger -t ${logger_tag} "[$1] PASDARAN-2 $2;D;;$cutoff;$visp response : $strret_2"

# mail if one of pasdaran server is down
if [ "$ret_1" != "0" ] || [ "$ret_2" != "0" ]; then
  [ "$ret_1" != "0" ] && [ "$ret_2" != "0" ] && stop=0
  bodymail=$(mktemp)
  echo "From $hn:${self}, account $1" > $bodymail
  [ "$ret_1" != "0" ] && echo "pasdaran request (${pasdaran_server_1}): $2;D;;$cutoff;$visp\n\treturned: $strret_1" >>$bodymail
  [ "$ret_2" != "0" ] && echo "pasdaran request (${pasdaran_server_2}): $2;D;;$cutoff;$visp\n\treturned: $strret_2" >>$bodymail
  cat $bodymail | mail -s "[$hn] pasdaran error" $mail
  rm $bodymail
fi

dateiso=$(echo ${6}T${7} | sed 's/:/%3A/g')+0000

# TAXATION report
#tz=$10
tz=0x80fd   # timezone forced (TAXATION BUG)
response=$(curl --silent --connect-timeout $timeout1 --max-time $timeout2 --write-out "%{http_code}" -d ref=$1 -d mcc=$3 -d rx=$4 -d tx=$5 -d date=$dateiso -d timezone=$tz  -L "http://${tax_server}/report" 2>/dev/null)
curlcode=$?

case "$curlcode" in
  0)
    taxhttpcode=$(echo $response | sed 's/ /\n/g' | tail -1)
    ;;
  7)
    taxhttpcode=106 # disconnected
    stop=0
    ;;
  28)
    taxhttpcode=118 # operation timeout
    stop=0
    ;;
  *)
    taxhttpcode=418 # yes, I am a teapot
    stop=0
    ;;
esac

logger -t ${logger_tag} "[$1] TAXATION response : $taxhttpcode ($curlcode)"
if [ "$stop" = "1" ]; then
  logger -t ${logger_tag} "[$1] ACCT STOP : succeeded"
else
  logger -t ${logger_tag} "[$1] ACCT STOP : failed"
fi

exit $stop
