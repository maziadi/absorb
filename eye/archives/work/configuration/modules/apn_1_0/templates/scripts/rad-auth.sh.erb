#!/bin/dash
#
# Called on radius AUTH requests by Postgresql
# Must return AUTH validation boolean code
#
# Remark: in this context, STDOUT is evaluated as SQL commands by uphill PG function and must be routed to /dev/null
#
# Input: ref, ip, mcc, timezone, visprefrt
#

if [ "$*" = "" ]; then exit 0; fi
. /opt/local/bin/lib-apn.sh

# TAXATION request
logger_tag="rad-auth"
logger -t ${logger_tag} "[$1] AUTH check $1 $2 $3 $4 (forced to 0x80fd) $5"
auth=1
dateiso=$(date +%Y-%m-%d'T'%H:%M:%S | sed 's/ /T/g' | sed 's/:/%3A/g')+0000
visp=$5
visp=${visp#nil}

#tz=$4
tz=0x80fd   # timezone forced (TAXATION BUG)
response=$(curl --silent --connect-timeout $timeout1 --max-time $timeout2 --write-out "\n%{http_code}" -L "http://${tax_server}/access?ref=$1&mcc=$3&date=$dateiso&timezone=$tz" 2>/dev/null)
curlcode=$?
case "$curlcode" in
  0)
    taxhttpcode=$(echo $response | sed 's/.*,.* //g')
    fairuse=$(echo $response | cut -d',' -f1)
    cutoffa=$(echo $response | cut -d',' -f2 | cut -d' ' -f1)
    cutoffb=$(echo $response | cut -d',' -f3 | cut -d' ' -f1)
    ;;
  7)
    taxhttpcode=106 # disconnected
    ;;
  28)
    taxhttpcode=118 # operation timeout
    ;;
  *)
    taxhttpcode=418 # yes, I am a teapot
    ;;
esac

# BASIJ + PASDARAN requests
logger -t ${logger_tag} "[$1] TAXATION response : $taxhttpcode ($curlcode), $fairuse;$cutoffa;$cutoffb"
if [ "$taxhttpcode" = "200" ]; then

  # PASDARAN add | server 1
  ret_1=$(echo "$2;A;$fairuse;$cutoffa;$cutoffb;$visp" | netcat -w 1 ${pasdaran_server_1} 2>/dev/null); x=$?
  if [ ${#ret_1} = "0" ] || [ "$x" != "0" ]; then
    strret_1="I'm a taliban (netcat exit $x)"
  else
    strret_1=$(pasdaran_response $ret_1)
  fi
  logger -t ${logger_tag} "[$1] PASDARAN-1 $2;A;$fairuse;$cutoffa;$cutoffb;$visp response : $strret_1"

  # PASDARAN add | server 2
  ret_2=$(echo "$2;A;$fairuse;$cutoffa;$cutoffb;$visp" | netcat -w 1 ${pasdaran_server_2} 2>/dev/null); x=$?
  if [ ${#ret_2} = "0" ] || [ "$x" != "0" ]; then
    strret_2="I'm a taliban (netcat exit $x)"
  else
    strret_2=$(pasdaran_response $ret_2)
  fi
  logger -t ${logger_tag} "[$1] PASDARAN-2 $2;A;$fairuse;$cutoffa;$cutoffb;$visp response : $strret_2"

  # mail if one of pasdaran server is down
  if [ "$ret_1" != "0" ] || [ "$ret_2" != "0" ]; then
    bodymail=$(mktemp)
    echo "From $hn:${self}, account $1" > $bodymail
    [ "$ret_1" != "0" ] && echo "pasdaran request (${pasdaran_server_1}): $2;A;$fairuse;$cutoffa;$cutoffb;$visp\n\treturned: $strret_1" >>$bodymail
    [ "$ret_2" != "0" ] && echo "pasdaran request (${pasdaran_server_2}): $2;A;$fairuse;$cutoffa;$cutoffb;$visp\n\treturned: $strret_2" >>$bodymail
    cat $bodymail | mail -s "[$hn] pasdaran error" $mail
    rm $bodymail
  fi

  if [ "$ret_1" = "0" ] || [ "$ret_2" = "0" ]; then
    # PASDARAN ok, BASIJ add
    auth=1
    if [ "$cutoffa" != "" ]; then
      ret=$(echo "$2;A;$cutoffa;$cutoffb" | netcat -w 1 ${basij_server} 2>/dev/null)
      if [ ${#ret} = "0" ]; then
        ret="I'm a taliban !"
      fi
      logger -t ${logger_tag} "[$1] BASIJ $2;A;$cutoffa;$cutoffb response : $ret"
      if [ "$ret" != "true" ]; then
        # REJECT
        auth=0
      fi
    fi
  else
    # REJECT
    auth=0
  fi

else

  if [ "$taxhttpcode" = "118" ] || [ "$taxhttpcode" = "106" ] || [ "$taxhttpcode" = "418" ]; then
    mcc=$(echo $3 | cut -c 1-3)

    if [ "$mcc" = "208" ]; then
      # FR area and TAXATION timeout
      fairuse=0; cutoffa=""; cutoffb=""
      ret_1=$(echo "$2;A;$fairuse;$cutoffa;$cutoffb;$visp" | netcat -w 1 ${pasdaran_server_1} 2>/dev/null); x=$?
      if [ ${#ret_1} = "0" ] || [ "$x" != "0" ]; then
        strret_1="I'm a taliban (netcat exit $x)"
      else
        strret_1=$(pasdaran_response $ret_1)
      fi
      logger -t ${logger_tag} "[$1] MCC FR, PASDARAN-1 $2;A;$fairuse;$cutoffa;$cutoffb;$visp response : $strret_1"

      ret_2=$(echo "$2;A;$fairuse;$cutoffa;$cutoffb;$visp" | netcat -w 1 ${pasdaran_server_2} 2>/dev/null); x=$?
      if [ ${#ret_2} = "0" ] || [ "$x" != "0" ]; then
        strret_2="I'm a taliban (netcat exit $x)"
      else
        strret_2=$(pasdaran_response $ret_2)
      fi
      logger -t ${logger_tag} "[$1] MCC FR, PASDARAN-2 $2;A;$fairuse;$cutoffa;$cutoffb;$visp response : $strret_2"

      # mail if one of pasdaran server is down
      if [ "$ret_1" != "0" ] || [ "$ret_2" != "0" ]; then
        bodymail=$(mktemp)
        echo "From $hn:${self}, account $1" > $bodymail
        [ "$ret_1" != "0" ] && echo "pasdaran request (${pasdaran_server_1}): $2;A;$fairuse;$cutoffa;$cutoffb;$visp\n\treturned: $strret_1" >>$bodymail
        [ "$ret_2" != "0" ] && echo "pasdaran request (${pasdaran_server_2}): $2;A;$fairuse;$cutoffa;$cutoffb;$visp\n\treturned: $strret_2" >>$bodymail
        cat $bodymail | mail -s "[$hn] pasdaran error" $mail
        rm $bodymail
      fi

      if [ "$ret_1" = "0" ] || [ "$ret_2" = "0" ]; then
        # ACCEPT
        auth=1
      else
        # REJECT
        auth=0
      fi
    else
      # REJECT
      auth=0
    fi
  else
    # REJECT
    auth=0
  fi

fi

if [ "$auth" = "1" ]; then
  logger -t ${logger_tag} "[$1] AUTH : succeeded"
else
  logger -t ${logger_tag} "[$1] AUTH : failed"
fi

exit $auth
