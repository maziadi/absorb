#!/usr/bin/env ruby

require 'fileutils'
require 'tempfile'

include FileUtils


class Tempdir
  attr_reader :path
  def initialize(name)
    tmpfile = Tempfile::new("#{name}")
    @path = tmpfile.path
    tmpfile.delete
    mkdir_p @path
  end
  def delete
    rm_rf @path
  end
end


$kernel = "2.6.26-alpha-686" 

def parted(cmd)
  system "sudo parted -s #{cmd}"
  puts "sudo parted -s #{cmd}"
  if ($? != 256 && $? != 0)
    fail "Error in parted"
  end
end

def sh(commands)
  system "#{commands}"
  exitStatus=$?
  fail "Command failed with status (#{exitStatus}): [#{commands}]" if exitStatus!=0
end


if ARGV.size != 1
  fail "Erreur, vous devez sp√©cifier le device"
else
  $device = ARGV[0]
end


fail "Erreur vous devez installer syslinux" if !File.executable?("/usr/bin/syslinux")
#fail "Erreur vous devez installer parted" if !File.executable?("/sbin/syslinux")

parted "#{$device} mklabel msdos"
parted "#{$device} mkpartfs primary fat16 0.0 300MB"
parted "#{$device} set 1 boot on"
parted "#{$device} set 1 lba off"
sleep 1
sh "sudo dd if=/usr/lib/syslinux/mbr.bin of=#{$device} bs=512 count=1"
sleep 1
sh "sudo syslinux #{$device}1"

td = Tempdir.new("dev")
system "rsync -a root@gold.alphalink.fr:/srv/debian-live/live #{td.path}"
system "scp root@gold.alphalink.fr:/var/lib/tftpboot/debian-live/i386/*#{$kernel}* #{td.path}/live"
mkdir_p "#{td.path}/syslinux"

syscfg = <<EOF
prompt 5
timeout 10
default live
LABEL live
  kernel /live/vmlinuz-#{$kernel}
  append initrd=/live/initrd.img-#{$kernel} boot=live nolocales username=root module=alpha union=aufs live-getty
EOF
open("#{td.path}/syslinux/syslinux.cfg","w"){ |f| f.write("#{syscfg}") }

td2 = Tempdir.new("dev2")

sh "sudo mount #{$device}1 #{td2.path}"
system "sudo cp -r #{td.path}/* #{td2.path}/"
sh "sudo rm -rf #{td.path}/*"
sh "sudo umount #{$device}1"


td2.delete
td.delete
