#!/usr/bin/env ruby

begin
  require 'cmdparse2'
rescue LoadError => detail
  require 'rubygems'
  require 'cmdparse'
end

if RUBY_VERSION.eql?("1.8.7")
  require 'tools/support/monitoring_ping.rb'
else
  require_relative 'monitoring_ping'
end

cmd = CmdParse::CommandParser::new(true,true)
cmd.program_name = "monitoring-cli"
cmd.program_version = [0,0,1]

cmd.add_command(CmdParse::HelpCommand::new, true)
cmd.add_command(CmdParse::VersionCommand::new)

create = CmdParse::Command::new('ping', false)
create.short_desc = "Monitor by ping"
create.description = "Monitor by ping"
create.description << """
  - equipement (\"visp-alpha5\")
  - ip (ex: 217.15.84.66)
  - interface (ex:nas254001)
  - time (en heure) (ex: 24)
"""
create.options = CmdParse::OptionParserWrapper::new do |opt|
  opt.on('-m', '--machine MACHINE', "Monitored equipment") { |$machine| }
  opt.on('-i', '--ip IP', "Monitored ip") { |$ip| }
  opt.on('-o', '--interface INTERFACE', "Monitored interface") { |$interface| }
  opt.on('-c', '--count COUNT', "Sequences number") { |$sequence| }
end
create.set_execution_block do |args|
  if $ip.nil? or $machine.nil? or $interface.nil? or $sequence.nil? 
    raise CmdParse::InvalidOptionError, "les champs obligatoires sont -m, -i, -o, -c" 
  end
  
  monitor_editor = MonitorEditor::new

  error = "\n"
  error += "\tMauvais format d'adresse ip\n" if $ip!~ /\A(?:25[0-5]|(?:2[0-4]|1\d|[1-9])?\d)(?:\.(?:25[0-5]|(?:2[0-4]|1\d|[1-9])?\d)){3}\z/
  error += "\tMauvais format de sequence\n" if $sequence!~ /\A\d+\z/
  if error != "\n"
    raise CmdParse::InvalidOptionError, error
  else
    monitor_editor.monitor_ping($machine,$ip,$interface,$sequence)
  end
end
cmd.add_command(create)
cmd.parse
