#!/bin/bash
#
# Delete S-2 accounting records and append to archives
#

archivefile="/data/apn/$(date +%Y%m%d)-archive.csv"
logger_tag="archive"
retention=365

# exit if not executed on primary
ip a | grep <%= virtual_ip %> >/dev/null
if [ "$?" == "1" ]; then exit 0; fi

# file rotation
find /data/apn/*archive.csv -type f -mtime +$retention -exec /bin/rm -f {} \;

# archive
logger -t ${logger_tag} "CRON ARCHIVAGE start"
echo -e "\nCRON ARCHIVAGE radacct start : $(date +%Y-%M-%d' '%T)" >> $archivefile
su - postgres -c 'psql -1 -d <%= db_name %> -c "SELECT * FROM radacct WHERE EXTRACT(EPOCH from now())::int/3600/24 - EXTRACT(EPOCH from acctstarttime)::int/3600/24 >= 14" -h <%= virtual_ip %>' | grep -v "^[[:space:]]\+radacctid" | grep -v "^-" | grep -v "^$" | grep -v "^(.*row" | sed 's/ //g' | sed 's/|/;/g'  >> $archivefile
su - postgres -c 'psql -1 -d <%= db_name %> -c "DELETE FROM radacct WHERE EXTRACT(EPOCH from now())::int/3600/24 - EXTRACT(EPOCH from acctstarttime)::int/3600/24 >= 14" -h <%= virtual_ip %>' >/dev/null
echo "CRON ARCHIVAGE radacct stop : $(date +%Y-%M-%d' '%T)" >> $archivefile
echo -e "\nCRON ARCHIVAGE radpostauth start : $(date +%Y-%M-%d' '%T)" >> $archivefile
su - postgres -c 'psql -1 -d <%= db_name %> -c "SELECT * FROM radpostauth WHERE EXTRACT(EPOCH from now())::int/3600/24 - EXTRACT(EPOCH from authdate)::int/3600/24 >= 14" -h <%= virtual_ip %>' | grep -v "^[[:space:]]\+id" | grep -v "^-" | grep -v "^$" | grep -v "^(.*row" | sed 's/ //g' | sed 's/|/;/g' >> $archivefile
su - postgres -c 'psql -1 -d <%= db_name %> -c "DELETE FROM radpostauth WHERE EXTRACT(EPOCH from now())::int/3600/24 - EXTRACT(EPOCH from authdate)::int/3600/24 >= 14" -h <%= virtual_ip %>' >/dev/null
echo "CRON ARCHIVAGE radpostauth stop : $(date +%Y-%M-%d' '%T)" >> $archivefile
logger -t ${logger_tag} "CRON ARCHIVAGE stop"

exit 0
