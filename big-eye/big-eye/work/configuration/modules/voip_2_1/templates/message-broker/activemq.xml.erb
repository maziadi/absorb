<!--
  ActiveMQ activemq.xml configuration file (/usr/local/activemq/conf/activemq.xml)

  * ActiveMQ JVM Startup options are in /etc/activemq.conf

  * Uses the Sun JMX connector for remote management.  Point jconsole at:
     service:jmx:rmi:///jndi/rmi://myserver.domain.net:61616/jmxrmi

  * Uses Kaha persistence storage, stored in the "activemq-data" directory.
    "activemq-data" and "logs" sub-directories must be writable by the
    ActiveMQ user.

  * Also see conf/log4j.properties for logging configuration
-->

<beans
  xmlns="http://www.springframework.org/schema/beans" 
  xmlns:amq="http://activemq.apache.org/schema/core" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
    <!-- Enables system properties as variables in this configuration file -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <broker xmlns="http://activemq.apache.org/schema/core"
        brokerName="<%= hostname -%>"
        advisorySupport="true"
        useJmx="true"
        populateJMSXUserID="true"
        persistent="true"
        dataDirectory="/var/lib/activemq-data/">
    
        <destinationPolicy>
         <policyMap>
           <policyEntries>
             <policyEntry topic=">" producerFlowControl="false" memoryLimit="32mb" />
             <policyEntry queue=">" producerFlowControl="false" memoryLimit="32mb" />
             <policyEntry queue="sigal.db.query" queuePrefetch="5" />
             <policyEntry queue="sigal.cdr" queuePrefetch="100" />
           </policyEntries>
         </policyMap>
       </destinationPolicy>
    
        <!-- Queue setup.  Queues can be created on the fly by any user with
             admin rights, but it is not good to give every user admin rights.  -->
        <destinations>
            <queue physicalName="sigal.db.query" />
            <queue physicalName="sigal.db.update" />
            <topic physicalName="sigal.db.notification.update" />
            <queue physicalName="sigal.cdr" />
            <topic physicalName="sigal.cdr.notification" />
            <queue physicalName="provisioning" />
            <topic physicalName="ActiveMQ.Advisory.Connection"/>
        </destinations>
    
        <!-- Do not create an ActiveMQ JMX connector.  Use the Sun JMX connector
             instead, and hook ActiveMQ to it. -->
        <managementContext>
            <managementContext createConnector="false" />
        </managementContext>
    
        <networkConnectors>
<% if active_mq_connector_url -%>
          <networkConnector name="sigal-bridge"
            userName="bridge"
            password="<%= active_mq_bridge_password -%>"
            uri="static://(<%= active_mq_connector_url -%>)?maxReconnectDelay=5000&amp;initialReconnectDelay=250"
            decreaseNetworkConsumerPriority="true"/>
<% else -%>
        <!-- We don't have any other brokers to connect to -->
<% end -%>
        </networkConnectors>
    
        <plugins>
            <simpleAuthenticationPlugin>
                <users>
                    <authenticationUser username="admin" password="<%= active_mq_admin_password -%>" groups="admins,agents,ass,operators,erps" />
                    <authenticationUser username="agent" password="<%= active_mq_agent_password -%>" groups="agents" />
                    <authenticationUser username="as" password="<%= active_mq_as_password -%>" groups="ass" />
                    <authenticationUser username="erp" password="<%= active_mq_erp_password -%>" groups="erps" />
                    <authenticationUser username="monit" password="<%= active_mq_monit_password -%>" groups="monits" />
                    <authenticationUser username="operator" password="<%= active_mq_operator_password -%>" groups="operators" />
<% if active_mq_connector_url -%>
                    <authenticationUser username="bridge" password="<%= active_mq_bridge_password -%>" groups="admins" />
<% end -%>
                </users>
            </simpleAuthenticationPlugin>
            <authorizationPlugin>
                <map>
                    <authorizationMap>
                        <authorizationEntries>
                            <authorizationEntry queue=">" write="admins" read="admins" admin="admins" />
                            <authorizationEntry topic=">" write="admins" read="admins" admin="admins" />
                            <authorizationEntry queue="sigal.cdr" write="agents" read="ass,erps" admin="admins" />
                            <authorizationEntry topic="sigal.cdr.notification" write="agents" read="ass,erps,operators" admin="admins" />
                            <authorizationEntry queue="sigal.db.query" write="agents,operators" read="ass" admin="admins" />
                            <authorizationEntry queue="sigal.db.update" write="operators" read="ass" admin="admins" />
                            <authorizationEntry topic="sigal.db.notification.>" write="operators,ass" read="ass" admin="admins" />
                            <authorizationEntry queue="provisioning" write="operators,ass,erps" read="operators,ass,erps" admin="admins" />
                            <authorizationEntry topic="ActiveMQ.Advisory.>" read="admins,agents,ass,erps,operators" 
                                write="admins,agents,ass,erps,operators" admin="admins,agents,ass,erps,operators"/>
                        </authorizationEntries>
                        <tempDestinationAuthorizationEntry>
                            <tempDestinationAuthorizationEntry read="admins,agents,ass,erps,operators" 
                                write="admins,agents,ass,erps,operators" admin="admins,agents,ass,erps,operators"/>
                        </tempDestinationAuthorizationEntry>
                    </authorizationMap>
                </map>
            </authorizationPlugin>
        </plugins>
        
        <systemUsage>
            <systemUsage sendFailIfNoSpace="true">
                <memoryUsage>
                    <memoryUsage limit="32 mb"/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="<%= active_mq_pers_store_value -%>" name="persist-store"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="128 mb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <!-- We only allow Stomp clients -->
        <transportConnectors>
            <transportConnector name="stomp" uri="stomp://<%= active_mq_service_addr -%>:61613"/>
            <transportConnector name="openwire" uri="tcp://<%= active_mq_service_addr -%>:61616" discoveryUri="multicast://default"/>
        </transportConnectors>

    </broker>
    <commandAgent xmlns="http://activemq.apache.org/schema/core"
      username="admin"
      password="qg7lURk9VJ"/>
</beans>
